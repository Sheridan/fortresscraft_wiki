user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log {{ log_directory }}/nginx.access.log;
        error_log {{ log_directory }}/nginx.error.log;

        ##
        # Gzip Settings
        ##

        gzip on;
        gzip_disable "msie6";

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;

        ##
        # Virtual Host Configs
        ##

        server {
            listen               80;
            listen               [::]:80;
            server_name          ozodlik.su;
            return 404;
        }

        server {
            listen               80;
            listen               [::]:80;
            server_name          {% for server_name in server_names %}{{ server_name }} {% endfor %};
            root /var/www/letsencrypt;
            location / {
                error_page 403 = @failback;
                try_files $uri $uri/ @failback;
            }

            location @failback {
                return 302 https://$server_name$request_uri;
            }
        }

        server {

            listen [::]:443 ssl;
            listen 443 ssl;

            server_name {% for server_name in server_names %}{{ server_name }} {% endfor %};
            root {{ site_directory }};

            ssl_certificate             /opt/lego/certificates/fortresscraft.info.crt;
            ssl_certificate_key         /opt/lego/certificates/fortresscraft.info.key;

            location /.well-known {
                root    /var/www/letsencrypt;
            }

            index index.php;
            autoindex off;

            client_max_body_size {{ wiki.max_upload_filesize|int * 2 }};
            client_body_timeout 60;

            location / {
                try_files $uri $uri/ @rewrite;
            }

            location @rewrite {
                rewrite ^/(.*)$ /index.php?title=$1&$args;
            }

            location ^~ /maintenance/ {
                return 403;
            }

            # PHP Configuration
            location ~ \.php$ {
                fastcgi_pass unix:/var/run/php-fpm.sock;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
                include snippets/fastcgi-php.conf;
            }

            location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                try_files $uri /index.php;
                expires max;
                log_not_found off;
            }

            location = /_.gif {
                expires max;
                empty_gif;
            }

            location ^~ ^/(cache|includes|maintenance|languages|serialized|tests|images/deleted)/ {
                deny all;
            }

            location ^~ ^/(bin|docs|extensions|includes|maintenance|mw-config|resources|serialized|tests)/ {
                internal;
            }

            # Security for 'image' directory
            location ~* ^/images/.*.(html|htm|shtml|php)$ {
                types { }
                default_type text/plain;
            }

            # Security for 'image' directory
            location ^~ /images/ {
                try_files $uri /index.php;
            }

        }

}
